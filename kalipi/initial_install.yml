---

- hosts: kali
  vars:
    users:
    - ansible
  vars_prompt:
  - name: "kali_user_password"    
    prompt: "Enter a new password for the kali user"
    private: yes    
    encrypt: "md5_crypt" #need to have python-passlib installed in local machine before we can use it    
    confirm: yes    
    salt_size: 7

  tasks:
    - name: Print the users
      ansible.builtin.debug:
        msg: "The folloing users will be created: {{ item }}"
      with_items: "{{ users }}"

    - name: Perform full patching
      package:
        name: '*'
        state: latest

    - name: Add user groups
      group:
        name: "{{ item }}"
        state: present
      with_items: "{{ users }}"

    - name: Add local user
      user:
        name: "{{ item }}"
        group: "{{ item }}"
        shell: /bin/bash
        home: "/home/{{ item }}"
        create_home: yes
        state: present
      with_items: "{{ users }}"

    - name: Add SSH public key for user
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present
      with_items: "{{ users }}"

    - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
      openssh_keypair:
        path: /home/kali/.ssh/id_rsa
        owner: kali
        group: kali

    - name: Fix owner of the generated pub key
      file:
        path: /home/kali/.ssh/id_rsa.pub
        owner: kali
        group: kali

    - name: Change kali user password
      user:
        name: admin
        update_password: always
        password: "{{ kali_user_password }}"
        #password: "{{ newpassword|password_hash('sha512') }}"

    # - name: Add sudoer rule for local user
    #   copy:
    #     dest: "/etc/sudoers.d/{{ item }}"
    #     src: "etc/sudoers.d/{{ item }}"
    #     owner: root
    #     group: root
    #     mode: 0440
    #     validate: /usr/sbin/visudo -csf %s
    #   with_items: "{{ users }}"

    # - name: Make sure we have a 'wheel' group
    #   group:
    #     name: wheel
    #     state: present

    # - name: Allow 'wheel' group to have passwordless sudo
    #   lineinfile:
    #     dest: /etc/sudoers
    #     state: present
    #     regexp: '^%wheel'
    #     line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    #     validate: 'visudo -cf %s'

    - name: Add sudoers users to wheel group
      user:
        name={{ item }}
        groups=sudo
        append=yes
        state=present
      with_items: "{{ users }}"

    # - name: Set up authorized keys for the deployer user
    #   authorized_key: user=deployer key="{{item}}"
    #   with_file:
    #     - /home/railsdev/.ssh/id_rsa.pub

    # - name: Add hardened SSH config
    #   copy:
    #     dest: /etc/ssh/sshd_config
    #     src: etc/ssh/sshd_config
    #     owner: root
    #     group: root
    #     mode: 0600
    #   notify: Reload SSH

  handlers:
    - name: Reload SSH
      service:
        name: sshd
        state: reloaded