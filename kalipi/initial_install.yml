---

- hosts: kali
  vars:
    users:
    - ansible
  vars_prompt:
  - name: "kali_user_password"    
    prompt: "Enter a new password for the kali user"
    private: yes    
    #encrypt: "md5_crypt" #need to have python-passlib installed in local machine before we can use it    
    confirm: yes    
    #salt_size: 7

  tasks:
    - name: Print the users
      ansible.builtin.debug:
        msg: "The folloing users will be created: {{ item }}"
      with_items: "{{ users }}"

    - name: Perform full patching
      package:
        name: '*'
        state: latest

    - name: Add user groups
      group:
        name: "{{ item }}"
        state: present
      with_items: "{{ users }}"

    - name: Add local user
      user:
        name: "{{ item }}"
        group: "{{ item }}"
        shell: /bin/bash
        home: "/home/{{ item }}"
        create_home: yes
        state: present
      with_items: "{{ users }}"

    - name: Add SSH public key for user
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present
      with_items: "{{ users }}"

    - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
      openssh_keypair:
        path: /home/kali/.ssh/id_rsa
        owner: kali
        group: kali

    - name: Fix owner of the generated pub key
      file:
        path: /home/kali/.ssh/id_rsa.pub
        owner: kali
        group: kali

    - name: Change kali user password
      user:
        name: kali
        update_password: always
        password: "{{ kali_user_password|password_hash('sha512') }}"
        #password: "{{ kali_user_password }}"

    - name: Add sudoers users to wheel group
      user:
        name={{ item }}
        groups=sudo
        append=yes
        state=present
      with_items: "{{ users }}"

    - name: Install docker and openssl package
      apt: name={{ item }} update_cache=yes state=latest
      loop: ['docker.io', 'openssl']
    
    - name: Install fail2ban and dependancies
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'whois', 'python3-pyinotify', 'fail2ban' ]

    - name: Install X2Go and dependancies
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'x2goserver', 'x2goclient' ]

  handlers:
    - name: Reload SSH
      service:
        name: sshd
        state: reloaded